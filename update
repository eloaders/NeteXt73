#!/bin/bash
## Graficzny instalator kerneli e X t 7 3  - NeteXt'73
## przygotowanie kerneli e X t 7 3 - ext73@wp.pl
## przygotowanie skrypt√≥w optymalizacyjnych e X t 7 3
## autor skryptu NeteXt'73 - NetBit73 - netbit73@gmail.com
## Licencja: GPL v3: https://www.gnu.org/licenses/gpl.txt
#
#		    _   _      _      __  ___   _ _____ _____
#		   | \ | | ___| |_ ___\ \/ / |_( )___  |___ /
#		   |  \| |/ _ \ __/ _ \\  /| __|/   / /  |_ \
#		   | |\  |  __/ |_  __//  \| |_    / /  ___) |
#		   |_| \_|\___|\__\___/_/\_\\__|  /_/  |____/
#
#	            __ _ _ __ __ _ / _(_) ___ _____ __  _   _
#	           / _` | '__/ _` | |_| |/ __|_  / '_ \| | | |
#	          | (_| | | | (_| |  _| | (__ / /| | | | |_| |
#	           \__, |_|  \__,_|_| |_|\___/___|_| |_|\__, |
#	           |___/                                |___/
#     _           _        _       _                   _                        _ _
#    (_)_ __  ___| |_ __ _| | __ _| |_ ___  _ __      | | _____ _ __ _ __   ___| (_)
#    | | '_ \/ __| __/ _` | |/ _` | __/ _ \| '__|     | |/ / _ \ '__| '_ \ / _ \ | |
#    | | | | \__ \ |_ (_| | | (_| | |_ (_) | |        |   <  __/ |  | | | |  __/ | |
#    |_|_| |_|___/\__\__,_|_|\__,_|\__\___/|_|        |_|\_\___|_|  |_| |_|\___|_|_|
#        __  __  _     _____   _____      ___     _   _      _   ____  _ _  _____ ____
#   ___  \ \/ / | |_  |___  | |___ /     ( _ )   | \ | | ___| |_| __ )(_) |____  |___ /
#  / _ \  \  /  | __|    / /    |_ \     / _ \/\ |  \| |/ _ \ __|  _ \| | __| / /  |_ \
# |  __/  /  \  | |_    / /    ___) |   | (_>  < | |\  |  __/ |_| |_) | | |_ / /  ___) |
#  \___| /_/\_\  \__|  /_/    |____/     \___/\/ |_| \_|\___|\__|____/|_|\__/_/  |____/
#
#########################################################################################################################################################################
#procedury

source /opt/NeteXt73/procedury

#########################################################################################################################################################################
#Update
cd /tmp/netext73

usun(){
rm *.html* -f
rm -f /tmp/netext73/*.txt 
}

instalacja_gcc(){
naglowek > instaluj.sh
echo "sudo ln -sf /opt/\$(ls /opt/NeteXt73/pakiety | grep binutils)/bin/ld /usr/bin/ld && sudo ln -sf /opt/\$(ls /opt/NeteXt73/pakiety | grep binutils)/bin/ld /usr/bin/ld-plugin && sudo ln -sf /opt/\$(ls /opt/NeteXt73/pakiety | grep binutils)/bin/ld.bfd /usr/bin/ld.bfd" >> instaluj.sh
echo "sudo ln -sf /opt/gcc-\$(ls /opt/NeteXt73/pakiety/ | grep gcc | cut -d "-" -f 2 | sed 's/.tar.xz//g')/bin/gcc /usr/bin/gcc && sudo ln -sf /opt/gcc-\$(ls /opt/NeteXt73/pakiety/ | grep gcc | cut -d "-" -f 2 | sed 's/.tar.xz//g')/bin/gcc-ar /usr/bin/gcc-ar && sudo ln -sf /opt/gcc-\$wersja/bin/cpp /usr/bin/cpp" >> instaluj.sh
instalacja
}
nv_radeon(){
if [ "$(lspci | grep -i GeForce | grep -i NVIDIA)" != "" ];then
	a5="TRUE"
else
	a5="FALSE"
fi
if [ "$(lspci | grep VGA | awk '{print tolower($0)}' | grep radeon)" = "" ] || [ "$(glxinfo | grep 'AMD Radeon HD' | sed -e 's/.*HD //g' -e 's/ .*//g')" -le 5000 ];then
	a6="FALSE"
else
	a6="TRUE"
fi
}

aktualizuj_calosc(){
nv_radeon
konfiguracja=$(yad --title="$nazwa_skryptu" --window-icon="/opt/NeteXt73/ikony/start.png" --image="/opt/NeteXt73/ikony/start.png" --text="<span color=\"$kolor_textu\">$TEXT_UPDATE1</span>" --center --form --columns=3 --field="system microcode:CHK" --field="grub:CHK" --field="apm:CHK" --field="kernel:CHK" --field="NVIDIA:CHK" --field="RADEON:CHK" --field="gcc:CHK"  $a1 $a2 $a3 $a4 $a5 $a6 $a7 --width="$((650*$skala))" --button="gtk-ok:0" --button="$TEXT_POWROT:1" )
	klawisz=$?
	if [ "$klawisz" = "0" ]; then
		if [ "$(echo $konfiguracja | cut -d '|' -f 1 )" = "TRUE" ]; then
			/opt/NeteXt73/./microcode
		fi
		if [ "$(echo $konfiguracja | cut -d '|' -f 2 )" = "TRUE" ]; then
			/opt/NeteXt73/./grub
		fi
		if [ "$(echo $konfiguracja | cut -d '|' -f 3 )" = "TRUE" ]; then
			/opt/NeteXt73/./NeteXt73_root ./apm
		fi
		if [ "$(echo $konfiguracja | cut -d '|' -f 4 )" = "TRUE" ]; then
			if [ "$kernel_premium" = "tak" ]; then
			      /opt/NeteXt73/./kernele premium
			else
			      /opt/NeteXt73/./kernele
			fi
		fi
		if [ "$(echo $konfiguracja | cut -d '|' -f 5 )" = "TRUE" ]; then
			/opt/NeteXt73/./grafiki nvidia
		fi
		if [ "$(echo $konfiguracja | cut -d '|' -f 6 )" = "TRUE" ]; then
			/opt/NeteXt73/./grafiki radeon
		fi
		if [ "$(echo $konfiguracja | cut -d '|' -f 7 )" = "TRUE" ]; then
			instalacja_gcc
		fi
	fi
}
usun

if [ "$1" = "first" ]; then
	/opt/NeteXt73/./help & #odpalenie strony z opisem
	a1="TRUE"
	a2="TRUE"
	a3="TRUE"
	a4="TRUE"
	a7="TRUE"
	nv_radeon
	aktualizuj_calosc
	usun
	exit 0
fi

menu=""
ilosc_aktualizacji=0

#GRUB
if [ "$(grep 'acpi_osi=' /etc/default/grub)" != "" ]; then
	a2="FALSE"
else
	a2="TRUE"
	((ilosc_aktualizacji++))
fi


#GCC
twoj_gcc=$(gcc --version | head -n 1 | awk '{print $3}')
dostepny_gcc=$(ls /opt/NeteXt73/pakiety/ | grep gcc | cut -d "-" -f 2 | sed 's/.tar.xz//g')
if [ "$twoj_gcc" = "$dostepny_gcc" ];then
	gcc_text="$twoj_gcc"
	a7="FALSE"
else
	gcc_text="$TEXT_UPDATE5a V$dostepny_gcc"
	a7="TRUE"
	((ilosc_aktualizacji++))
fi
#firmware
stan_firmware
twoj_firmware=$(dpkg -l | grep linux-firmware | awk '{print $3}' | head -n 1 | sed 's/~.*//')

#microcode
if [ "$stan_microcode" != "-" ] && [ "$twoj_firmware" = "" ]; then
	firm=$TEXT_UPDATE5a
	a1="TRUE"
	menu="$TEXT_UPDATE1 Firmware/microcode!$TEXT_UPDATE1 Kernel!$TEXT_UPDATE1 APM!$TEXT_UPDATE2!$TEXT_UPDATE8"
elif [ "$stan_microcode" = "-" ]; then
	firm=$TEXT_UPDATE5a
	a1="TRUE"
	menu="$TEXT_UPDATE1 Firmware/microcode!$TEXT_UPDATE1 Kernel!$TEXT_UPDATE1 APM!$TEXT_UPDATE2!$TEXT_UPDATE8"
else
	firm=v$twoj_firmware
	a1="FALSE"
fi

#APM
twoj_apm=$(ls $katalog_apm | cut -d "_" -f 7 | head -n 1)
if [ "$twoj_apm" = "$wersja_apm" ]  ; then
	apm="$TEXT_UPDATE4"
	a3="FALSE"
else
	apm="$TEXT_UPDATE5 $wersja_apm"
	menu="$TEXT_UPDATE1 APM!$TEXT_UPDATE1 Kernel!$TEXT_UPDATE1 Firmware/microcode!$TEXT_UPDATE2!$TEXT_UPDATE8"
	a3="TRUE"
	((ilosc_aktualizacji++))
fi

#kernele stable
lista_kerneli update

#sprawdzanie kerneli do wersji v29.x
if [ "$(uname -r | grep ags)" != "" ];then
	if [ "$(uname -r | grep ext | grep pro )" != "" ];then
	      twoj_kernel="e X t 7 3 - pro v$(uname -r| cut -d "-" -f 4)-$(uname -r | cut -d '-' -f 1)"
	elif [ "$(uname -r | grep ext )" != "" ];then
	      twoj_kernel="e X t 7 3 v$(uname -r| cut -d "-" -f 4)-$(uname -r | cut -d '-' -f 1)"
	else
	      twoj_kernel=$(uname -r)
      fi
else
#sprawdzanie kerneli od wersji v30.x
      if [ "$(uname -r | grep ext | grep pro )" != "" ];then
	      twoj_kernel="e X t 7 3 - pro v$(uname -r | cut -d "-" -f 3)-$(uname -r | cut -d '-' -f 1)"
      elif [ "$(uname -r | grep ext )" != "" ];then
	      twoj_kernel="e X t 7 3 v$(uname -r| cut -d "-" -f 3)-$(uname -r | cut -d '-' -f 1)"
      else
	      twoj_kernel=$(uname -r)
      fi
fi

nowy_kernel=$(grep 'href="ftp' kernel.txt | cut -d '"' -f 2 | sort -r | head -n 1 | sed 's/.*v...._//' | sed 's/\///g')

if  [ "$(cat stable.txt)" = "" ]; then
      stable=$TEXT_BRAK_DANYCH
      nr=""
else
      stable=$(cat stable.txt | grep tar.xz | head -n 1 | cut -d '-' -f 2 | sed 's/.tar.*//')
      nr=$stable
fi

#kernel zainstalowany
if [ "$(cat kernel.txt)" = "" ]; then
      kern=$TEXT_BRAK_DANYCH
      a4="TRUE"
else
      kern1="$(echo $nowy_kernel | sed 's/_testowy.*//g' | sed 's/_stabilny.*//g' | cut -d "-" -f 3)-$(echo  $nowy_kernel | cut -d "-" -f 1 )"
      if [ "$kern1" = "$(echo $twoj_kernel | sed 's/.*v//')" ]; then
	      kern="$TEXT_UPDATE4"
	      a4="FALSE"
      else
	      kern="$TEXT_UPDATE5  v$(echo $nowy_kernel | sed 's/_testowy.*//g' | sed 's/_stabilny.*//g' | cut -d "-" -f 3)-$(echo  $nowy_kernel | cut -d "-" -f 1 )"
	      menu="$TEXT_UPDATE1 Kernel!$TEXT_UPDATE1 Firmware/microcode!$TEXT_UPDATE1 APM!$TEXT_UPDATE2!$TEXT_UPDATE8"
	      a4="TRUE"
	      ((ilosc_aktualizacji++))
      fi
fi

if [ "$menu" = "" ]; then
      menu="$TEXT_UPDATE2"
fi


if [ "$ilosc_aktualizacji" -gt "1" ]; then
      menu="$TEXT_UPDATE8"
fi
menu="$TEXT_UPDATE1 gcc!$TEXT_UPDATE1 Firmware/microcode!$TEXT_UPDATE1 Kernel!$TEXT_UPDATE1 APM!$TEXT_UPDATE2!$TEXT_UPDATE8"

a=$(yad --center --title="$nazwa_skryptu" --width=$((610*$skala)) --window-icon="/opt/NeteXt73/ikony/update.png" --image="/opt/NeteXt73/ikony/update.png" --form \
--field="Firmware/microcode:RO" "$firm" \
--field="Kernel $twoj_kernel:RO" "$kern" \
--field="APM $twoj_apm:RO" "$apm" \
--field="$TEXT_STABLE:RO" "$stable" \
--field="GCC -version:RO" "$gcc_text" \
--field="$TEXT_UPDATE1:CB" "$menu" \
--button="Changelog $nr:3" \
--button="$TEXT_UPDATE7:2" \
--button="gtk-ok:0" --button="$TEXT_POWROT:1")
klawisz=$?; a=$(echo $a | cut -d "|" -f 6)

if [ $klawisz = "0" ]; then 
	if [ "$a" = "$TEXT_UPDATE1 APM" ]; then 
		usun
		/opt/NeteXt73/./NeteXt73_root ./apm
	elif [ "$a" = "$TEXT_UPDATE1 Firmware/microcode" ]; then 
		usun
		if [ "$firm" = "$TEXT_UPDATE4" ]; then
			yad --center --info --title="$nazwa_skryptu"  --window-icon="/opt/NeteXt73/ikony/info.png" --image="/opt/NeteXt73/ikony/info.png" --button="gtk-ok:0" --text="$TEXT_MICROCODE1"
		else
			cd /opt/NeteXt73 && ./microcode
		fi
	elif [ "$a" = "$TEXT_UPDATE1 Kernel" ]; then 
		usun
		if [ "$kernel_premium" = "tak" ] ; then
			cd /opt/NeteXt73 && ./kernele premium
		else
			cd /opt/NeteXt73 && ./kernele
		fi
	elif [ "$a" = "$TEXT_UPDATE2" ]; then
		xterm -T  "dist-upgrade" -e bash -c "echo 'sudo apt-get update && sudo apt-get dist-upgrade'; sudo apt-get update && sudo apt-get dist-upgrade -y;echo -e \"$TEXT_INSTALACJA2\"; read ent"
	
	elif [ "$a" = "$TEXT_UPDATE8" ]; then
		aktualizuj_calosc
	elif [ "$a" = "$TEXT_UPDATE1 gcc" ]; then 
		instalacja_gcc
	fi
elif [ $klawisz = "2" ]; then
	a1="TRUE"
	a2="TRUE"
	a3="TRUE"
	a4="TRUE"
	a7="TRUE"
	aktualizuj_calosc 
elif [ $klawisz = "3" ]; then  #lista zmian
    if [ "$stable" != "$TEXT_BRAK_DANYCH" ]; then
	if [[ $nr =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]];then
		if [ "$USER" = "root" ]; then
			sudo -u $userek bash << EOF
			xdg-open "https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-$stable"
EOF
		else
			xdg-open "https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-$stable"
		fi
	else
		if [ "$USER" = "root" ]; then
			sudo -u $userek bash << EOF
			xdg-open "https://www.kernel.org"
EOF
		else
			xdg-open "https://www.kernel.org"
		fi
	fi
    fi
fi

usun
